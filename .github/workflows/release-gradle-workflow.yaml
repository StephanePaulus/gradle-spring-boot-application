name: Release Java CI with Gradle

on:
  push:
    branches:
      - 'main'
  workflow_dispatch:
  release:
    types: [ published ]

permissions: write-all

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"
      - name: test
        env:
          BRANCH_NAME: ${{github.event.release.target_commitish}}
        run: |
          echo "BRANCH_NAME"
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          BRANCH_NAME: ${{github.event.release.target_commitish}}
        with:
          arguments: build sonar

#  tag:
#    if: github.ref == 'refs/heads/main'
#    needs: build
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#        with:
#          fetch-depth: 0
#      - name: Set up JDK 11
#        uses: actions/setup-java@v3
#        with:
#          java-version: '11'
#          distribution: 'temurin'
#      - name: Build with Gradle
#        uses: gradle/gradle-build-action@v2
#        with:
#          arguments: release -Prelease.overriddenBranchName=${{ github.head_ref }}
#      - name: Get version
#        id: version
#        run: |
#          echo VERSION=$( ./gradlew cV -q -Prelease.quiet ) >> $GITHUB_ENV
#      - run: gh release create v$VERSION --generate-notes
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  push_to_registry:
    if: github.ref == 'refs/heads/main' || github.event_name == 'release'
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: stephanepaulus
          password: ${{ secrets.DOCKER_HUB_PSW }}
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: jib

# update_argo-cd_helm:
#    if: github.ref == 'refs/heads/main'
#    name: Push Docker image to Docker Hub
#    runs-on: ubuntu-latest
#    needs: build
#    steps: ...

#### RUN extra test => if success use automation to create TAG or axion release job.
####                 ==> TAG will also create a github release

#### RUN extra test => if success without automation either push tag manually or create github release with the version you want
####                 ==> TAG will also create a github release


#### AFTER github release => trigger either promotion/tagging of docker image [or new build]
####                       ==> promote/change argo-cd_helm imagetag for PRE-PROD
####                        ===> PRE-PROD to PROD will have its own test, release-cycle, ...
