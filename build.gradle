import org.springframework.boot.gradle.plugin.SpringBootPlugin

plugins {
    id 'org.springframework.boot' version '2.7.7' apply false
    id 'java'
    id 'io.freefair.lombok' version "8.0.1"
    id 'pl.allegro.tech.build.axion-release' version "1.15.5"
    id 'com.google.cloud.tools.jib' version "3.3.2"
    id 'jacoco-report-aggregation'
    id 'org.sonarqube' version "4.4.1.3373"
    id "com.google.protobuf" version "0.9.4"
}

scmVersion {
    snapshotCreator({ version, position -> {
        if(position.branch != 'main'){
            "-alpha"
        }else{
            "-rc-"+position.shortRevision
        }
    }})
    versionCreator('versionWithBranch')
    repository {
        pushTagsOnly = true
    }
    checks {
        uncommittedChanges = false
        aheadOfRemote = false
        snapshotDependencies = true
    }
    versionIncrementer('incrementMinor')
}

group = 'org.example'
version = scmVersion.version
description = 'simple spring-boot gradle application'

repositories {
    maven{
        url	"https://packages.confluent.io/maven/"
    }
    mavenCentral()
}

configurations {
    integrationTestImplementation.extendsFrom testImplementation
}

dependencies {
    annotationProcessor platform(SpringBootPlugin.BOM_COORDINATES)
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    implementation platform(SpringBootPlugin.BOM_COORDINATES)

    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.kafka:spring-kafka'

    implementation 'com.google.protobuf:protoc:3.25.2'
    implementation "com.google.protobuf:protobuf-java:3.25.2"

    implementation 'io.confluent:kafka-protobuf-serializer:5.5.1'

    testImplementation 'org.junit.jupiter:junit-jupiter-engine'
    testImplementation 'org.junit.jupiter:junit-jupiter-params'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

testing {
    suites {
        test {
            useJUnitJupiter()
        }

        integrationTest(JvmTestSuite) {
            dependencies {
                implementation project()
            }

            targets {
                all {
                    testTask.configure {
                        shouldRunAfter(test)
                    }
                }
            }
        }
    }
}

tasks.named('check') {
    dependsOn(testing.suites.integrationTest)
}

jib {
    from {
        image = "stephanepaulus/base-java17:main"
    }
    to {
        image = "stephanepaulus/spring-boot-application"
        tags = [version]
    }
}

sonar {
    properties {
        property "sonar.projectKey", "StephanePaulus_gradle-spring-boot-application"
        property "sonar.organization", "stephanepaulus"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}

protobuf {
    protoc {
        // The artifact spec for the Protobuf Compiler
        artifact = 'com.google.protobuf:protoc:3.25.2'
    }
}
